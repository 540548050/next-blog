{"version":3,"file":"1.ee6b3b34739616c25109.hot-update.js","sources":["webpack:///lib/with-redux-store.js","webpack:///store/store.js"],"sourcesContent":["import React from 'react'\nimport {initializeStore} from '../store/store'\n\nconst isServer = typeof window === 'undefined'\nconst __NEXT_REDUX_STORE__ = '__NEXT_REDUX_STORE__'\n\nfunction getOrCreateStore(initialState) {\n  // Always make a new store if server, otherwise state is shared between requests\n  if (isServer) {\n    return initializeStore(initialState)\n  }\n\n  // Create store if unavailable on the client and set it on the window object\n  if (!window[__NEXT_REDUX_STORE__]) {\n    window[__NEXT_REDUX_STORE__] = initializeStore(initialState)\n  }\n  return window[__NEXT_REDUX_STORE__]\n}\n\nexport default (App) => {\n  return class AppWithRedux extends React.Component {\n    static async getInitialProps (appContext) {\n      // Get or Create the store with `undefined` as initialState\n      // This allows you to set a custom default initialState\n      const reduxStore = getOrCreateStore()\n\n      // Provide the store to getInitialProps of pages\n      appContext.ctx.reduxStore = reduxStore\n\n      let appProps = {}\n      if (typeof App.getInitialProps === 'function') {\n        appProps = await App.getInitialProps.call(App, appContext)\n      }\n\n      return {\n        ...appProps,\n        initialReduxState: reduxStore.getState()\n      }\n    }\n\n    constructor(props) {\n      super(props)\n      this.reduxStore = getOrCreateStore(props.initialReduxState)\n    }\n\n    render() {\n      return <App {...this.props} reduxStore={this.reduxStore} />\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// lib/with-redux-store.js","import {createStore, applyMiddleware} from 'redux'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport axios from 'axios';\r\n\r\nconst exampleInitialState = {\r\n  lastUpdate: 0,\r\n  light: false,\r\n  count: 0,\r\n  res:[]\r\n}\r\n\r\nexport const actionTypes = {\r\n  TICK: 'TICK',\r\n  INCREMENT: 'INCREMENT',\r\n  DECREMENT: 'DECREMENT',\r\n  RESET: 'RESET',\r\n  TEST_ASYNC: 'TEST_ASYNC',\r\n  CHANGE_PAGE_BLOG:'CHANGE_PAGE_BLOG'\r\n}\r\n\r\n// REDUCERS\r\nexport const reducer = (state = exampleInitialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.TICK:\r\n      return Object.assign({}, state, {\r\n        lastUpdate: action.ts,\r\n        light: !!action.light\r\n      })\r\n    case actionTypes.CHANGE_PAGE_BLOG:\r\n      return Object.assign({}, state, {\r\n        BlogItemList:action.BlogItemList\r\n      })\r\n    case actionTypes.INCREMENT:\r\n      return Object.assign({}, state, {\r\n        lastUpdate: action.ts,\r\n        count: state.count + 1,\r\n        res: action.res,\r\n        light: !!action.light\r\n      })\r\n    case actionTypes.DECREMENT:\r\n      return Object.assign({}, state, {\r\n        count: state.count - 1\r\n      })\r\n    case actionTypes.RESET:\r\n      return Object.assign({}, state, {\r\n        count: exampleInitialState.count\r\n      })\r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport const testAsync = (state = [], action) => {\r\n  switch (action.type) {\r\n    case actionTypes.TEST_ASYNC:\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}\r\n// ACTIONS\r\nexport const serverRenderClock = (isServer) => dispatch => {\r\n  return dispatch({type: actionTypes.TICK, light: !isServer, ts: Date.now()})\r\n}\r\n\r\nexport const serverRenderIncrementCount = (isServer,res) => dispatch => {\r\n\r\n  return dispatch({\r\n    type: actionTypes.INCREMENT,\r\n    light: !isServer,\r\n    res,\r\n    ts: Date.now()\r\n  })\r\n}\r\nexport const getBlogItemList = (dispatch, url)  => {\r\n  return axios.get(url).then(res => {\r\n    dispatch({type: actionTypes.INCREMENT, res: res.data})\r\n  })\r\n}\r\nexport const asyncTest = data => {\r\n  return {\r\n    type: actionTypes.TEST_ASYNC,\r\n    data\r\n  }\r\n};\r\nexport const startClock = dispatch => {\r\n  return setInterval(() => {\r\n    // Dispatch `TICK` every 1 second\r\n    dispatch({type: actionTypes.TICK, light: true, ts: Date.now()})\r\n  }, 1000)\r\n}\r\n\r\nexport const incrementCount = (dispatch, url) => {\r\n  /* return setTimeout(() => {\r\n     // Dispatch `TICK` every 1 second\r\n     dispatch({ type: actionTypes.INCREMENT })\r\n   }, 1000)*/\r\n  return axios.get(url).then(res => {\r\n    exampleInitialState.res=res.data\r\n    dispatch({type: actionTypes.INCREMENT, res: res.data, light: true, ts: Date.now()})\r\n  })\r\n}\r\n\r\nexport const decrementCount = () => dispatch => {\r\n  return dispatch({type: actionTypes.DECREMENT})\r\n}\r\n\r\nexport const resetCount = () => dispatch => {\r\n  return dispatch({type: actionTypes.RESET})\r\n}\r\n\r\nexport function initializeStore(initialState = exampleInitialState) {\r\n  return createStore(reducer, initialState, composeWithDevTools(applyMiddleware(thunkMiddleware)))\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// store/store.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAVA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAWA;AACA;AAZA;AAAA;AAgBA;AAhBA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AAmBA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAGA;AACA;AAxBA;AAAA;AAAA;AA0BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AA3BA;AACA;AADA;AAAA;AAAA;AA6BA;;;;;;;;ACjDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAFA;AACA;AAGA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AADA;AACA;AAEA;AACA;AA1BA;AA4BA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAJA;AAMA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAIA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAMA;AARA;AASA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;;;;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AAFA;AAIA;AAAA;AACA;AAAA;AAAA;AACA;AAFA;AAIA;AAAA;AACA;AACA;;;;A","sourceRoot":""}