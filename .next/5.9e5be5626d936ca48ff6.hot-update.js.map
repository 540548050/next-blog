{"version":3,"file":"5.9e5be5626d936ca48ff6.hot-update.js","sources":["webpack:///pages/detail/index.js"],"sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux'\nimport {\n  Layout, Menu, Breadcrumb, Row, Col, BackTop, Card, Form,\n  Input, Tooltip, Cascader, Select, Checkbox, Button,\n  AutoComplete, List, Avatar, Icon, Divider\n} from 'antd';\nimport 'whatwg-fetch'\nimport Head from 'next/head';\n\nimport {formatTime, getHtml, OldTime} from '../../until';\nimport Header from '../../components/Header';\nimport ArticleTitle from '../../components/ArticleTitle';\nimport {getDetailUrl, getCommentsUrl,postCommentUrl} from '../../config';\nimport {postComments} from '../../store/actions';\n\nconst {Content} = Layout;\n\nconst FormItem = Form.Item;\nconst { TextArea } = Input;\nconst AutoCompleteOption = AutoComplete.Option;\n\nclass Detail extends Component {\n  constructor(props) {\n    super(props);\n    this.state={\n      autoCompleteResult:[1,2],\n      articleID:''\n    }\n  }\n  componentWillMount(){\n    console.log('willMOunt',this.props)\n  }\n  handleWebsiteChange = (value) => {\n    let autoCompleteResult;\n    if (!value) {\n      autoCompleteResult = [];\n    } else {\n      autoCompleteResult = ['.com', '.org', '.net'].map(domain => `${value}${domain}`);\n    }\n    this.setState({autoCompleteResult});\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const {dispatch,blogData = [], commentsData = []} = this.props;\n    let {id} = blogData[0] || {};\n    if(!id){\n      return;\n    }\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        const {comment,email,nickname,website} = values;\n        console.log('Received values of form: ', values);\n\n        console.log({id,comment,email,nickname,website})\n        \n        const queryStringComment = {\n          id:182,\n          comment:'comment',\n          email:'a@c.com',\n          nickname:'nickname',\n          website:'www.liuweibo.cn'\n        }\n        postComments(dispatch,postCommentUrl(),queryStringComment)\n      }\n    });\n  }\n  render() {\n    //接口\n    console.log(this.props)\n    let {blogData = [], commentsData = [],getCommentsData=[]} = this.props;\n    const {content = '', createTime = ''} = blogData[0] || {};\n    if(getCommentsData.length){\n      commentsData=getCommentsData.filter(v=>{\n        \n      })\n    }\n\n    \n    //表单\n    const {getFieldDecorator} = this.props.form;\n    const {autoCompleteResult} = this.state;\n\n    const formItemLayout = {\n      labelCol: {\n        xs: {span: 24},\n        sm: {span: 8},\n      },\n      wrapperCol: {\n        xs: {span: 24},\n        sm: {span: 16},\n      },\n    };\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0,\n        },\n        sm: {\n          span: 16,\n          offset: 8,\n        },\n      },\n    };\n\n    const websiteOptions = autoCompleteResult.map(website => (\n      <AutoCompleteOption key={website}>{website}</AutoCompleteOption>\n    ));\n    return (\n      <div className=\"detail\">\n        <Head>\n          <title>blog</title>\n        </Head>\n        <Header/>\n        <Layout>\n          <Content style={{padding: '0 50px'}}>\n            <div style={{background: '#fff', padding: 24, minHeight: 380}}>\n              <ArticleTitle detailArticle={blogData[0]}/>\n              <div\n                dangerouslySetInnerHTML={{\n                  __html:\n                    createTime > OldTime ?\n                      marked(getHtml(decodeURIComponent(content), createTime), {breaks: true})\n                      : getHtml(decodeURIComponent(content), createTime)\n                }}\n              ></div>\n            </div>\n            <div className=\"comment-wrapper\">\n              <h2>发表评论：</h2>\n              <Row>\n                <Col span={8}>\n                  <Form onSubmit={this.handleSubmit}>\n                    <FormItem\n                      {...formItemLayout}\n                      label={(\n                        <span>\n              Nickname&nbsp;\n                          <Tooltip title=\"What do you want others to call you?\">\n                <Icon type=\"question-circle-o\" />\n              </Tooltip>\n            </span>\n                      )}\n                    >\n                      {getFieldDecorator('nickname', {\n                        rules: [{ required: true, message: 'Please input your nickname!', whitespace: true }],\n                      })(\n                        <Input />\n                      )}\n                    </FormItem>\n                    <FormItem\n                      {...formItemLayout}\n                      label=\"E-mail\"\n                    >\n                      {getFieldDecorator('email', {\n                        rules: [{\n                          type: 'email', message: 'The input is not valid E-mail!',\n                        }, {\n                          required: false, message: 'Please input your E-mail!',\n                        }],\n                      })(\n                        <Input/>\n                      )}\n                    </FormItem>\n                    <FormItem\n                      {...formItemLayout}\n                      label=\"Website\"\n                    >\n                      {getFieldDecorator('website', {\n                        rules: [{required: false, message: 'Please input website!'}],\n                      })(\n                        <AutoComplete\n                          dataSource={websiteOptions}\n                          onChange={this.handleWebsiteChange}\n                          placeholder=\"website\"\n                        >\n                          <Input/>\n                        </AutoComplete>\n                      )}\n                    </FormItem>\n                    <FormItem\n                      {...formItemLayout}\n                      label=\"comment\"\n                    >\n                      {getFieldDecorator('comment', {\n                        rules: [ {\n                          required: true, message: 'Please input your E-mail!',\n                        }],\n                      })(\n                        <TextArea/>\n                      )}\n                    </FormItem>\n                    <FormItem {...tailFormItemLayout}>\n                      <Button type=\"primary\" htmlType=\"submit\">提交评论</Button>\n                    </FormItem>\n                  </Form>\n                </Col>\n              </Row>\n              {\n                commentsData.map((v, i) =>\n                  (\n                    <Card\n                      bodyStyle={{background: \"#f8f8f8\"}}\n                      key={i} title={\n                      <span>\n                       <span style={{color: '#34538b', fontWeight: 'bold'}}>{v.user}</span>\n                        说道：\n                    </span>\n                    }\n                      extra={<a href=\"javascript:;\">{formatTime(v.createTime)}</a>}>\n                      <p>{v.msg}</p>\n                    </Card>\n                  )\n                )\n              }\n            </div>\n          </Content>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nDetail.getInitialProps = async function (context) {\n  const {id} = context.query\n  let queryStrObj = {id};\n  const blog = await fetch(getDetailUrl(queryStrObj))\n  const comments = await fetch(getCommentsUrl(queryStrObj))\n  const blogData = await blog.json()\n  const commentsData = await comments.json()\n\n\n  return {blogData, commentsData}\n}\nconst mapStateToProps = state => {\n  console.log(state)\n  const {getCommentsData} = state\n  return {getCommentsData};\n}\nconst WrappedRegistrationForm = Form.create()(Detail);\nexport default connect(mapStateToProps)(WrappedRegistrationForm);\n\n\n// WEBPACK FOOTER //\n// pages/detail/index.js"],"mappings":"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","sourceRoot":""}