{"version":3,"file":"6.5f24e95cc0958c6f532d.hot-update.js","sources":["webpack:///components/Comments/index.js"],"sourcesContent":["import React,{Component} from 'react';\nimport {connect} from 'react-redux';\nimport Link from 'next/link';\nimport {\n  Layout, Menu, Breadcrumb, Row, Col, BackTop, Card, Form,\n  Input, Tooltip, Cascader, Select, Checkbox, Button,\n  AutoComplete, List, Avatar, Icon, Divider,message\n} from 'antd';\n\nimport {formatTime,regUrl} from \"../../until\";\nimport {postComments} from \"../../store/actions\";\nimport {postCommentUrl} from \"../../config\";\n\n\n//表单定义\nconst FormItem = Form.Item;\nconst { TextArea } = Input;\nconst AutoCompleteOption = AutoComplete.Option;\n\nconst formItemLayout = {\n  labelCol: {\n    xs: {span: 24},\n    sm: {span: 8},\n  },\n  wrapperCol: {\n    xs: {span: 24},\n    sm: {span: 16},\n  },\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 16,\n      offset: 8,\n    },\n  },\n};\n\n\nclass Comments extends Component {\n  constructor(props) {\n    super(props);\n    this.state={\n      autoCompleteResult:[],\n      articleID:''\n    }\n  }\n  componentWillMount(){\n    const {blogData = []} = this.props;\n    console.log('components comments',this.props)\n    let {id:articleID} = blogData[0] || {};\n    this.setState({\n      articleID\n    })\n  }\n  handleWebsiteChange = (value) => {\n    let autoCompleteResult;\n    if (!value) {\n      autoCompleteResult = [];\n    } else {\n      autoCompleteResult = ['.com','.cn', '.org', '.net'].map(domain => `${value}${domain}`);\n    }\n    this.setState({autoCompleteResult});\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const {dispatch,dataSource={}} = this.props;\n    const {articleID:id} = dataSource;\n    if(!id){\n      return;\n    }\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        const {comment,email,nickname,website} = values;\n        if(website!==''&&!regUrl.test(website)){\n          message.warning('url不正确,示例：\"http://www.xxx.com\"')\n          return ;\n        }\n        const queryStringComment = {\n          id,\n          comment,\n          email,\n          nickname,\n          website\n        }\n        postComments(dispatch,postCommentUrl(),queryStringComment).then(res=>{\n          if(res){\n            message.success(`评论发表成功`);\n          }\n        })\n      }\n    });\n  }\n  render(){\n    const {dataSource={}} = this.props;\n    const {commentsData=[]} = dataSource;\n    //表单\n    const {getFieldDecorator} = this.props.form;\n    const {autoCompleteResult} = this.state;\n    const websiteOptions = autoCompleteResult.map(website => (\n      <AutoCompleteOption key={website}>{website}</AutoCompleteOption>\n    ));\n    return (\n      <div className=\"comment-wrapper\">\n        <h2>发表评论：</h2>\n        <Row>\n          <Col span={8}>\n            <Form onSubmit={this.handleSubmit}>\n              <FormItem\n                {...formItemLayout}\n                label={(\n                  <span>\n              Nickname&nbsp;\n                    <Tooltip title=\"What do you want others to call you?\">\n                <Icon type=\"question-circle-o\" />\n              </Tooltip>\n            </span>\n                )}\n              >\n                {getFieldDecorator('nickname', {\n                  rules: [{ required: true, message: 'Please input your nickname!', whitespace: true }],\n                })(\n                  <Input\n                    title=\"用户名\"\n                    placeholder=\"用户名\" />\n                )}\n              </FormItem>\n              <FormItem\n                {...formItemLayout}\n                label=\"E-mail\"\n              >\n                {getFieldDecorator('email', {\n                  rules: [{\n                    type: 'email', message: 'The input is not valid E-mail!',\n                  }, {\n                    required: false, message: 'Please input your E-mail!',\n                  }],\n                })(\n\n                  <Input\n                    title=\"不会被公开\"\n                    placeholder=\"不会被公开\"/>\n                )}\n              </FormItem>\n              <FormItem\n                {...formItemLayout}\n                label=\"Website\"\n              >\n                {getFieldDecorator('website', {\n                  rules: [{required: false, message: 'Please input website!'}],\n                })(\n                  <AutoComplete\n                    dataSource={websiteOptions}\n                    onChange={this.handleWebsiteChange}\n                    placeholder='SEO推广 示例：\"http://xxx.com\"'\n                    title='SEO推广 示例：\"http://xxx.com\"'\n                  >\n                    <Input/>\n                  </AutoComplete>\n                )}\n              </FormItem>\n              <FormItem\n                {...formItemLayout}\n                label=\"comment\"\n              >\n                {getFieldDecorator('comment', {\n                  rules: [ {\n                    required: true, message: 'Please input your comment!',\n                  }],\n                })(\n                  <TextArea\n                    title=\"来吐槽\"\n                    placeholder=\"来吐槽\"/>\n                )}\n              </FormItem>\n              <FormItem {...tailFormItemLayout}>\n                <Button type=\"primary\" htmlType=\"submit\">提交评论</Button>\n              </FormItem>\n            </Form>\n          </Col>\n        </Row>\n        {\n          commentsData.map((v, i) =>\n            (\n              <Card\n                bodyStyle={{background: \"#f8f8f8\"}}\n                key={i} title={\n                <span>\n                  {\n                    v.website?\n                      <Link href={v.website} >\n                        <a style={{color: '#34538b', fontWeight: 'bold'}}>{v.user}</a>\n                      </Link>\n                      :\n                      <span style={{color: '#000', fontWeight: 'bold'}}>{v.user}</span>\n                  }\n                        说道：\n                    </span>\n              }\n                extra={<a href=\"javascript:;\">{formatTime(v.createTime)}</a>}>\n                <p>{v.msg}</p>\n              </Card>\n            )\n          )\n        }\n      </div>\n    )\n  }\n}\nconst WrappedRegistrationForm = Form.create()(Comments);\nexport default connect()(WrappedRegistrationForm);\n\n\n// WEBPACK FOOTER //\n// components/Comments/index.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAOA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAIA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AALA;AAUA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AALA;AADA;AACA;AAaA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAgBA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAvBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAyBA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApDA;AAEA;AACA;AACA;AAFA;AAFA;AAMA;AACA;;;AAAA;AAAA;AAAA;AAEA;AACA;AAHA;AAAA;AACA;AAGA;AACA;AADA;AAGA;;;AAuCA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAMA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AANA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AADA;AAIA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAOA;AAFA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAAA;AADA;AAGA;AAAA;AADA;AAHA;AASA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAOA;AAFA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AADA;AAIA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAMA;AAFA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAAA;AADA;AADA;AAMA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAGA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAfA;AAAA;AAAA;AAAA;AAAA;AAgBA;AAAA;AAAA;AAAA;AAAA;AAlBA;AAyBA;;;;AAxKA;AACA;AAyKA;AACA;AAAA;;;;A","sourceRoot":""}