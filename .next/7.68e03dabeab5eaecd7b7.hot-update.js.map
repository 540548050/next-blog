{"version":3,"file":"7.68e03dabeab5eaecd7b7.hot-update.js","sources":["webpack:///components/Comments/index.js"],"sourcesContent":["import React,{Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Link from 'next/link';\r\nimport {\r\n  Layout, Menu, Breadcrumb, Row, Col, BackTop, Card, Form,\r\n  Input, Tooltip, Cascader, Select, Checkbox, Button,\r\n  AutoComplete, List, Avatar, Icon, Divider,message\r\n} from 'antd';\r\n\r\nimport {formatTime} from \"../../until\";\r\nimport {postComments} from \"../../store/actions\";\r\nimport {postCommentUrl} from \"../../config\";\r\n\r\n\r\n//表单定义\r\nconst FormItem = Form.Item;\r\nconst { TextArea } = Input;\r\nconst AutoCompleteOption = AutoComplete.Option;\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: {span: 24},\r\n    sm: {span: 8},\r\n  },\r\n  wrapperCol: {\r\n    xs: {span: 24},\r\n    sm: {span: 16},\r\n  },\r\n};\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  },\r\n};\r\n\r\n\r\nclass Comments extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state={\r\n      autoCompleteResult:[],\r\n      articleID:''\r\n    }\r\n  }\r\n  componentWillMount(){\r\n    const {blogData = []} = this.props;\r\n    console.log('components comments',this.props)\r\n    let {id:articleID} = blogData[0] || {};\r\n    this.setState({\r\n      articleID\r\n    })\r\n  }\r\n  handleWebsiteChange = (value) => {\r\n    let autoCompleteResult;\r\n    if (!value) {\r\n      autoCompleteResult = [];\r\n    } else {\r\n      autoCompleteResult = ['.com', '.org', '.net','.cn'].map(domain => `${value}${domain}`);\r\n    }\r\n    this.setState({autoCompleteResult});\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const {dispatch,dataSource={}} = this.props;\r\n    const {articleID:id} = dataSource;\r\n    if(!id){\r\n      return;\r\n    }\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      if (!err) {\r\n        const {comment,email,nickname,website} = values;\r\n        console.log('Received values of form: ', values);\r\n\r\n        const queryStringComment = {\r\n          id,\r\n          comment,\r\n          email,\r\n          nickname,\r\n          website\r\n        }\r\n        postComments(dispatch,postCommentUrl(),queryStringComment).then(res=>{\r\n          if(res){\r\n            message.success(`评论发表成功`);\r\n          }\r\n        })\r\n      }\r\n    });\r\n  }\r\n  render(){\r\n    const {dataSource={}} = this.props;\r\n    const {commentsData=[]} = dataSource;\r\n    //表单\r\n    const {getFieldDecorator} = this.props.form;\r\n    const {autoCompleteResult} = this.state;\r\n    const websiteOptions = autoCompleteResult.map(website => (\r\n      <AutoCompleteOption key={website}>{website}</AutoCompleteOption>\r\n    ));\r\n    return (\r\n      <div className=\"comment-wrapper\">\r\n        <h2>发表评论：</h2>\r\n        <Row>\r\n          <Col span={8}>\r\n            <Form onSubmit={this.handleSubmit}>\r\n              <FormItem\r\n                {...formItemLayout}\r\n                label={(\r\n                  <span>\r\n              Nickname&nbsp;\r\n                    <Tooltip title=\"What do you want others to call you?\">\r\n                <Icon type=\"question-circle-o\" />\r\n              </Tooltip>\r\n            </span>\r\n                )}\r\n              >\r\n                {getFieldDecorator('nickname', {\r\n                  rules: [{ required: true, message: 'Please input your nickname!', whitespace: true }],\r\n                })(\r\n                  <Input\r\n                    placeholder=\"用户名\" />\r\n                )}\r\n              </FormItem>\r\n              <FormItem\r\n                {...formItemLayout}\r\n                label=\"E-mail\"\r\n              >\r\n                {getFieldDecorator('email', {\r\n                  rules: [{\r\n                    type: 'email', message: 'The input is not valid E-mail!',\r\n                  }, {\r\n                    required: false, message: 'Please input your E-mail!',\r\n                  }],\r\n                })(\r\n                  <Input\r\n                    placeholder=\"不会被公开\"/>\r\n                )}\r\n              </FormItem>\r\n              <FormItem\r\n                {...formItemLayout}\r\n                label=\"Website\"\r\n              >\r\n                {getFieldDecorator('website', {\r\n                  rules: [{required: false, message: 'Please input website!'}],\r\n                })(\r\n                  <AutoComplete\r\n                    dataSource={websiteOptions}\r\n                    onChange={this.handleWebsiteChange}\r\n                    placeholder=\"利于你的网站SEO\"\r\n                  >\r\n                    <Input/>\r\n                  </AutoComplete>\r\n                )}\r\n              </FormItem>\r\n              <FormItem\r\n                {...formItemLayout}\r\n                label=\"comment\"\r\n              >\r\n                {getFieldDecorator('comment', {\r\n                  rules: [ {\r\n                    required: true, message: 'Please input your comment!',\r\n                  }],\r\n                })(\r\n                  <TextArea\r\n                    placeholder=\"来吐槽\"/>\r\n                )}\r\n              </FormItem>\r\n              <FormItem {...tailFormItemLayout}>\r\n                <Button type=\"primary\" htmlType=\"submit\">提交评论</Button>\r\n              </FormItem>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n        {\r\n          commentsData.map((v, i) =>\r\n            (\r\n              <Card\r\n                bodyStyle={{background: \"#f8f8f8\"}}\r\n                key={i} title={\r\n                <span>\r\n                  {\r\n                    v.website?\r\n                      <Link href={v.website} >\r\n                        <a style={{color: '#34538b', fontWeight: 'bold'}}>{v.user}</a>\r\n                      </Link>\r\n                      :\r\n                      <span style={{color: '#000', fontWeight: 'bold'}}>{v.user}</span>\r\n                  }\r\n                        说道：\r\n                    </span>\r\n              }\r\n                extra={<a href=\"javascript:;\">{formatTime(v.createTime)}</a>}>\r\n                <p>{v.msg}</p>\r\n              </Card>\r\n            )\r\n          )\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst WrappedRegistrationForm = Form.create()(Comments);\r\nexport default connect()(WrappedRegistrationForm);\n\n\n// WEBPACK FOOTER //\n// components/Comments/index.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAOA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAIA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AALA;AAUA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AALA;AADA;AACA;AAaA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAgBA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAvBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAyBA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlDA;AAEA;AACA;AACA;AAFA;AAFA;AAMA;AACA;;;AAAA;AAAA;AAAA;AAEA;AACA;AAHA;AAAA;AACA;AAGA;AACA;AADA;AAGA;;;AAqCA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAMA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AANA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AADA;AAIA;AADA;AAAA;AAAA;AAAA;AAAA;AAMA;AAFA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAAA;AADA;AAGA;AAAA;AADA;AAHA;AAQA;AADA;AAAA;AAAA;AAAA;AAAA;AAMA;AAFA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AADA;AAIA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAMA;AAFA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAAA;AADA;AADA;AAMA;AADA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAGA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAfA;AAAA;AAAA;AAAA;AAAA;AAgBA;AAAA;AAAA;AAAA;AAAA;AAlBA;AAyBA;;;;AAjKA;AACA;AAkKA;AACA;AAAA;;;;A","sourceRoot":""}